;$(-argvname)
;$(-argvname:) 记住上次输入
;$(-argvname:default) 以default为默认值

[file-build:release]
command:c=gcc -O3 --std=c23 "$(VIM_FILEPATH)" -o "$(VIM_FILEDIR)/$(VIM_FILENOEXT)"  
command:cpp=g++ -O3 --std=c++23 "$(VIM_FILEPATH)" -o "$(VIM_FILEDIR)/$(VIM_FILENOEXT)" 
command:java=javac -d "$(VIM_ROOT)/.build" "$(VIM_FILEPATH)"
command:go=go build -o "$(VIM_PATHNOEXT)" "$(VIM_FILEPATH)"
output=terminal
pos=bottom
cwd=$(VIM_FILEDIR)
#运行前保存所有改动的文件


[file-build:debug]
command:c=gcc --std=c23 "$(VIM_FILEPATH)" -o "$(VIM_FILEDIR)/$(VIM_FILENOEXT)" --debug 
command:cpp=g++ --std=c++23 "$(VIM_FILEPATH)" -o "$(VIM_FILEDIR)/$(VIM_FILENOEXT)" -lstdc++ --debug
command:java=javac -d "$(VIM_ROOT)/.build" "$(VIM_FILEPATH)"
output=terminal
pos=bottom
cwd=$(VIM_FILEDIR)
 

[file-run]
command="$(VIM_FILEPATH)"
command:c,cpp="$(VIM_PATHNOEXT)"
command:c,cpp/win32="$(VIM_PATHNOEXT).exe"
command:java=java -cp "$(VIM_ROOT)/.build" "$(VIM_FILENOEXT)" 

command:go="$(VIM_PATHNOEXT)"
command:python=python "$(VIM_FILENAME)"
command:make=make -f "$(VIM_FILENAME)" run

command:javascript=node "$(VIM_FILENAME)"
command:sh=sh "$(VIM_FILENAME)"
command:lua=lua "$(VIM_FILENAME)"
command:perl=perl "$(VIM_FILENAME)"
command:zsh=zsh "$(VIM_FILENAME)"
command:bash=bash "$(VIM_FILENAME)"
command:fish=fish "$(VIM_FILENAME)"
command:ps1=powershell -file "$(VIM_FILENAME)"
output=terminal
pos=bottom
cwd=$(VIM_FILEDIR)





[mvn-create]
command=mvn archetype:generate -DgroupId=$(-group:com.example) -DartifactId=$(-artifactname:hello-world) -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false && ls
cwd=<root>
output=terminal
pos=bottom


[cargo-create]
command=cargo new $(-name:) --bin
cwd=<root>
output=terminal
pos=bottom


[cmake-create]
command=cmake_create $(-name:)
cwd=<root>
output=terminal
pos=bottom

[test]
command=ls
cwd=<root>
output=terminal
pos=bottom
